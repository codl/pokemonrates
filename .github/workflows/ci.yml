name: CI

on:
  push:
  pull_request:
    branches:
      - main

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: astral-sh/setup-uv@v3
      with:
        enable-cache: true
        cache-suffix: lint
        cache-dependency-glob: ""
    - run: uv tool install ruff
    - run: ruff check
    - run: ruff format --check


  test:
    runs-on: ubuntu-latest
    strategy: 
      matrix:
        python-version: [
          "3.12",
        ]

    steps:
    - uses: actions/checkout@v4
    - uses: astral-sh/setup-uv@v3
      with:
        enable-cache: true
        cache-suffix: "test-${{ matrix.python-version }}"
    - run: uv venv --python=${{ matrix.python-version }}
    - run: uv sync --frozen --extra=test
    - run: uv run --frozen python -m coverage run --parallel -m pytest
    - name: Upload coverage data
      uses: actions/upload-artifact@v4
      with:
        name: coverage-data-${{ matrix.python-version }}
        path: .coverage.*
        include-hidden-files: true
        if-no-files-found: ignore

  coverage:
    runs-on: ubuntu-latest
    needs: test
    steps:
    - uses: actions/checkout@v4
    - uses: astral-sh/setup-uv@v3
      with:
        enable-cache: true
        cache-suffix: coverage
        cache-dependency-glob: ""
    - uses: actions/download-artifact@v4
      with:
        pattern: coverage-data-*
        merge-multiple: true
    - run: |
        uv tool install coverage[toml]
        coverage combine
        coverage report --format=markdown >> $GITHUB_STEP_SUMMARY
